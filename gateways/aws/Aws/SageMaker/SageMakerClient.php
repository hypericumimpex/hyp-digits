<?php

namespace Aws\SageMaker;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon SageMaker Service** service.
 * @method Result addTags( array $args = [] )
 * @method Promise addTagsAsync( array $args = [] )
 * @method Result createAlgorithm( array $args = [] )
 * @method Promise createAlgorithmAsync( array $args = [] )
 * @method Result createCodeRepository( array $args = [] )
 * @method Promise createCodeRepositoryAsync( array $args = [] )
 * @method Result createCompilationJob( array $args = [] )
 * @method Promise createCompilationJobAsync( array $args = [] )
 * @method Result createEndpoint( array $args = [] )
 * @method Promise createEndpointAsync( array $args = [] )
 * @method Result createEndpointConfig( array $args = [] )
 * @method Promise createEndpointConfigAsync( array $args = [] )
 * @method Result createHyperParameterTuningJob( array $args = [] )
 * @method Promise createHyperParameterTuningJobAsync( array $args = [] )
 * @method Result createLabelingJob( array $args = [] )
 * @method Promise createLabelingJobAsync( array $args = [] )
 * @method Result createModel( array $args = [] )
 * @method Promise createModelAsync( array $args = [] )
 * @method Result createModelPackage( array $args = [] )
 * @method Promise createModelPackageAsync( array $args = [] )
 * @method Result createNotebookInstance( array $args = [] )
 * @method Promise createNotebookInstanceAsync( array $args = [] )
 * @method Result createNotebookInstanceLifecycleConfig( array $args = [] )
 * @method Promise createNotebookInstanceLifecycleConfigAsync( array $args = [] )
 * @method Result createPresignedNotebookInstanceUrl( array $args = [] )
 * @method Promise createPresignedNotebookInstanceUrlAsync( array $args = [] )
 * @method Result createTrainingJob( array $args = [] )
 * @method Promise createTrainingJobAsync( array $args = [] )
 * @method Result createTransformJob( array $args = [] )
 * @method Promise createTransformJobAsync( array $args = [] )
 * @method Result createWorkteam( array $args = [] )
 * @method Promise createWorkteamAsync( array $args = [] )
 * @method Result deleteAlgorithm( array $args = [] )
 * @method Promise deleteAlgorithmAsync( array $args = [] )
 * @method Result deleteCodeRepository( array $args = [] )
 * @method Promise deleteCodeRepositoryAsync( array $args = [] )
 * @method Result deleteEndpoint( array $args = [] )
 * @method Promise deleteEndpointAsync( array $args = [] )
 * @method Result deleteEndpointConfig( array $args = [] )
 * @method Promise deleteEndpointConfigAsync( array $args = [] )
 * @method Result deleteModel( array $args = [] )
 * @method Promise deleteModelAsync( array $args = [] )
 * @method Result deleteModelPackage( array $args = [] )
 * @method Promise deleteModelPackageAsync( array $args = [] )
 * @method Result deleteNotebookInstance( array $args = [] )
 * @method Promise deleteNotebookInstanceAsync( array $args = [] )
 * @method Result deleteNotebookInstanceLifecycleConfig( array $args = [] )
 * @method Promise deleteNotebookInstanceLifecycleConfigAsync( array $args = [] )
 * @method Result deleteTags( array $args = [] )
 * @method Promise deleteTagsAsync( array $args = [] )
 * @method Result deleteWorkteam( array $args = [] )
 * @method Promise deleteWorkteamAsync( array $args = [] )
 * @method Result describeAlgorithm( array $args = [] )
 * @method Promise describeAlgorithmAsync( array $args = [] )
 * @method Result describeCodeRepository( array $args = [] )
 * @method Promise describeCodeRepositoryAsync( array $args = [] )
 * @method Result describeCompilationJob( array $args = [] )
 * @method Promise describeCompilationJobAsync( array $args = [] )
 * @method Result describeEndpoint( array $args = [] )
 * @method Promise describeEndpointAsync( array $args = [] )
 * @method Result describeEndpointConfig( array $args = [] )
 * @method Promise describeEndpointConfigAsync( array $args = [] )
 * @method Result describeHyperParameterTuningJob( array $args = [] )
 * @method Promise describeHyperParameterTuningJobAsync( array $args = [] )
 * @method Result describeLabelingJob( array $args = [] )
 * @method Promise describeLabelingJobAsync( array $args = [] )
 * @method Result describeModel( array $args = [] )
 * @method Promise describeModelAsync( array $args = [] )
 * @method Result describeModelPackage( array $args = [] )
 * @method Promise describeModelPackageAsync( array $args = [] )
 * @method Result describeNotebookInstance( array $args = [] )
 * @method Promise describeNotebookInstanceAsync( array $args = [] )
 * @method Result describeNotebookInstanceLifecycleConfig( array $args = [] )
 * @method Promise describeNotebookInstanceLifecycleConfigAsync( array $args = [] )
 * @method Result describeSubscribedWorkteam( array $args = [] )
 * @method Promise describeSubscribedWorkteamAsync( array $args = [] )
 * @method Result describeTrainingJob( array $args = [] )
 * @method Promise describeTrainingJobAsync( array $args = [] )
 * @method Result describeTransformJob( array $args = [] )
 * @method Promise describeTransformJobAsync( array $args = [] )
 * @method Result describeWorkteam( array $args = [] )
 * @method Promise describeWorkteamAsync( array $args = [] )
 * @method Result getSearchSuggestions( array $args = [] )
 * @method Promise getSearchSuggestionsAsync( array $args = [] )
 * @method Result listAlgorithms( array $args = [] )
 * @method Promise listAlgorithmsAsync( array $args = [] )
 * @method Result listCodeRepositories( array $args = [] )
 * @method Promise listCodeRepositoriesAsync( array $args = [] )
 * @method Result listCompilationJobs( array $args = [] )
 * @method Promise listCompilationJobsAsync( array $args = [] )
 * @method Result listEndpointConfigs( array $args = [] )
 * @method Promise listEndpointConfigsAsync( array $args = [] )
 * @method Result listEndpoints( array $args = [] )
 * @method Promise listEndpointsAsync( array $args = [] )
 * @method Result listHyperParameterTuningJobs( array $args = [] )
 * @method Promise listHyperParameterTuningJobsAsync( array $args = [] )
 * @method Result listLabelingJobs( array $args = [] )
 * @method Promise listLabelingJobsAsync( array $args = [] )
 * @method Result listLabelingJobsForWorkteam( array $args = [] )
 * @method Promise listLabelingJobsForWorkteamAsync( array $args = [] )
 * @method Result listModelPackages( array $args = [] )
 * @method Promise listModelPackagesAsync( array $args = [] )
 * @method Result listModels( array $args = [] )
 * @method Promise listModelsAsync( array $args = [] )
 * @method Result listNotebookInstanceLifecycleConfigs( array $args = [] )
 * @method Promise listNotebookInstanceLifecycleConfigsAsync( array $args = [] )
 * @method Result listNotebookInstances( array $args = [] )
 * @method Promise listNotebookInstancesAsync( array $args = [] )
 * @method Result listSubscribedWorkteams( array $args = [] )
 * @method Promise listSubscribedWorkteamsAsync( array $args = [] )
 * @method Result listTags( array $args = [] )
 * @method Promise listTagsAsync( array $args = [] )
 * @method Result listTrainingJobs( array $args = [] )
 * @method Promise listTrainingJobsAsync( array $args = [] )
 * @method Result listTrainingJobsForHyperParameterTuningJob( array $args = [] )
 * @method Promise listTrainingJobsForHyperParameterTuningJobAsync( array $args = [] )
 * @method Result listTransformJobs( array $args = [] )
 * @method Promise listTransformJobsAsync( array $args = [] )
 * @method Result listWorkteams( array $args = [] )
 * @method Promise listWorkteamsAsync( array $args = [] )
 * @method Result renderUiTemplate( array $args = [] )
 * @method Promise renderUiTemplateAsync( array $args = [] )
 * @method Result search( array $args = [] )
 * @method Promise searchAsync( array $args = [] )
 * @method Result startNotebookInstance( array $args = [] )
 * @method Promise startNotebookInstanceAsync( array $args = [] )
 * @method Result stopCompilationJob( array $args = [] )
 * @method Promise stopCompilationJobAsync( array $args = [] )
 * @method Result stopHyperParameterTuningJob( array $args = [] )
 * @method Promise stopHyperParameterTuningJobAsync( array $args = [] )
 * @method Result stopLabelingJob( array $args = [] )
 * @method Promise stopLabelingJobAsync( array $args = [] )
 * @method Result stopNotebookInstance( array $args = [] )
 * @method Promise stopNotebookInstanceAsync( array $args = [] )
 * @method Result stopTrainingJob( array $args = [] )
 * @method Promise stopTrainingJobAsync( array $args = [] )
 * @method Result stopTransformJob( array $args = [] )
 * @method Promise stopTransformJobAsync( array $args = [] )
 * @method Result updateCodeRepository( array $args = [] )
 * @method Promise updateCodeRepositoryAsync( array $args = [] )
 * @method Result updateEndpoint( array $args = [] )
 * @method Promise updateEndpointAsync( array $args = [] )
 * @method Result updateEndpointWeightsAndCapacities( array $args = [] )
 * @method Promise updateEndpointWeightsAndCapacitiesAsync( array $args = [] )
 * @method Result updateNotebookInstance( array $args = [] )
 * @method Promise updateNotebookInstanceAsync( array $args = [] )
 * @method Result updateNotebookInstanceLifecycleConfig( array $args = [] )
 * @method Promise updateNotebookInstanceLifecycleConfigAsync( array $args = [] )
 * @method Result updateWorkteam( array $args = [] )
 * @method Promise updateWorkteamAsync( array $args = [] )
 */
class SageMakerClient extends AwsClient {
}
